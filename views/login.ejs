<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login Page</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"/>
  <link rel="stylesheet" href="/stylesheet/login.css" />
  <style>
    body {
      background: linear-gradient(135deg, #f8f9fa, #e9ecef);
      font-family: 'Arial', sans-serif;
    }
    .container {
      margin-top: 100px;
      max-width: 400px;
      background: #fff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .btn-google {
      background-color: #4285F4;
      color: white;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .btn-google:hover {
      background-color: #357ae8;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="text-center mb-4">Login</h2>
    <form action="/login" method="post">
      <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" id="username" name="username" required>
      </div>
      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" name="password" required>
      </div>
      <button type="submit" class="btn btn-primary btn-block">Login</button>
    </form>
    <div class="mt-3 text-center">
      <a href="/login/auth/google" class="btn btn-google btn-block">
        <span>Sign in with Google</span>
      </a>
    </div>
    <div class="mt-3 text-center">
      <a href="/register" class="btn btn-secondary btn-block">Register</a>
    </div>
  </div>

  <script>
    document.querySelector('form').addEventListener('submit', async function (event) {
      event.preventDefault(); // 防止表單的默認提交
  
      const formData = new FormData(this); // 獲取表單數據
      const formObj = Object.fromEntries(formData.entries()); // 轉換成普通對象
  
      try {
        const response = await fetch('/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formObj), // 傳遞 JSON 數據
        });
  
        const result = await response.json(); // 獲取後端返回的 JSON 數據
  
        // 根據不同的 HTTP 狀態碼顯示不同的 alert
        if (response.status === 200) {
          alert(result.message); // 成功提示
          window.location.href = result.redirect; // 導向後端指定的頁面
        } else if (response.status === 404) {
          alert(result.message); // 用戶不存在提示
        } else if (response.status === 401) {
          alert(result.message); // 密碼錯誤提示
        } else {
          alert('An unexpected error occurred. Please try again.');
        }
      } catch (err) {
        console.error(err);
        alert('Failed to login. Please check your network or try again later.');
      }
    });
  </script>
  

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
