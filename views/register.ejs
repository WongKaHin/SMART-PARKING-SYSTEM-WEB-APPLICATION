<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>

<body>
    <div class="container">
        <h2 class="mt-5">Register</h2>
        <form id="registerForm" action="/register" method="POST" novalidate>
            <div class="form-group">
                <label for="username">Username</label>
                <small class="form-text text-muted">Enter your desired username (required).</small>
                <input type="text" class="form-control" id="username" name="username" required>
                <div class="invalid-feedback">Please enter a username.</div>
            </div>
            <div class="form-group">
                <label for="name">Name</label>
                <small class="form-text text-muted">Enter your full name (required).</small>
                <input type="text" class="form-control" id="name" name="name" required>
                <div class="invalid-feedback">Please enter your name.</div>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <small class="form-text text-muted">Must include "@" and domain (e.g., user@example.com).</small>
                <input type="email" class="form-control" id="email" name="email" required pattern="^[^@]+@[^@]+\.[^@]+$">
                <div class="invalid-feedback">Please enter a valid email address, including "@" and domain.</div>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <small class="form-text text-muted">Must be at least 6 characters long and include uppercase, lowercase, and a number.</small>
                <input type="password" class="form-control" id="password" name="password" 
                    required 
                    pattern="(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{6,}"
                    title="Password must be at least 6 characters long and include uppercase, lowercase, and a number.">
                <div class="invalid-feedback">Password must be at least 6 characters long and include uppercase, lowercase, and a number.</div>
            </div>
            
            <div class="form-group">
                <label for="sex">Sex</label>
                <small class="form-text text-muted">Select your biological sex.</small>
                <select class="form-control" id="sex" name="sex" required>
                    <option value="">Select...</option>
                    <option value="M">M</option>
                    <option value="F">F</option>
                </select>
                <div class="invalid-feedback">Please select your sex.</div>
            </div>
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <small class="form-text text-muted">Enter a valid phone number (8-15 digits).</small>
                <input type="text" class="form-control" id="phone" name="phone" required pattern="^[0-9]{8,15}$">
                <div class="invalid-feedback">Please enter a valid phone number (8-15 digits).</div>
            </div>
            <div class="form-group">
                <label for="age">Age</label>
                <small class="form-text text-muted">Enter your age (must be between 1 and 150).</small>
                <input type="number" class="form-control" id="age" name="age" required min="1" max="150">
                <div class="invalid-feedback">Please enter a valid age.</div>
            </div>
            <button type="submit" class="btn btn-primary mt-3">register</button>
        </form>
    </div>

 <script>
    (function () {
        'use strict';

        const form = document.getElementById('registerForm');

        form.addEventListener('submit', async function (event) {
            event.preventDefault(); // 阻止默認提交

            // 前端表單驗證
            if (!form.checkValidity()) {
                event.stopPropagation();
                form.classList.add('was-validated'); // 添加驗證樣式
                return; // 中止提交邏輯
            }

            form.classList.add('was-validated'); // 添加驗證樣式
            const formData = new FormData(this); // 獲取表單數據
            const formObj = Object.fromEntries(formData.entries()); // 將 FormData 轉為普通對象
            const submitButton = event.target.querySelector('button[type="submit"]'); 
            submitButton.disabled = true; // 禁用按鈕，避免多次提交

            try {
                const response = await fetch('/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formObj)
                });

                const result = await response.json();

                if (response.status === 201) {
                    alert(result.message); // 成功提示
                    window.location.href = '/login'; // 跳轉到登錄頁
                } else if (response.status === 409) {
                    alert(result.message); // 重複用戶名提示
                } else {
                    alert('An unexpected error occurred. Please try again.');
                }
            } catch (err) {
                console.error(err);
                alert('Failed to register. Please try again later.');
            } finally {
                submitButton.disabled = false; // 完成後啟用按鈕
            }
        }, false);
    })();

</script>




    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>

</html>
